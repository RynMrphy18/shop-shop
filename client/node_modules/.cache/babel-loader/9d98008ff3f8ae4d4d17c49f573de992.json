{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rmurp\\\\Desktop\\\\projects\\\\shop-shop\\\\client\\\\src\\\\pages\\\\Detail.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client'; // import { useStoreContext } from '../utils/GlobalState';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport Cart from '../components/Cart';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.products);\n  const cart = useSelector(state => state.cart);\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS); // const {cart } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentProduct ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to Products\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, currentProduct.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, currentProduct.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Price:\"), \"$\", currentProduct.price, ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !cart.find(p => p._id === currentProduct._id),\n    onClick: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Remove from Cart\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${currentProduct.image}`,\n    alt: currentProduct.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })) : null, loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 18\n    }\n  }) : null, /*#__PURE__*/React.createElement(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Detail;","map":{"version":3,"sources":["C:/Users/rmurp/Desktop/projects/shop-shop/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","useDispatch","useSelector","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","spinner","Cart","idbPromise","Detail","dispatch","products","state","cart","id","currentProduct","setCurrentProduct","loading","data","length","find","product","_id","type","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","purchaseQuantity","parseInt","removeFromCart","name","description","price","p","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n// import { useStoreContext } from '../utils/GlobalState';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport Cart from '../components/Cart';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  // const [state, dispatch] = useStoreContext();\n\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.products);\n  const cart = useSelector(state => state.cart);\n  \n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  // const {cart } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY, \n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {dispatch({\n      type: ADD_TO_CART,\n      product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', {...currentProduct, purchaseQuantity: 1});\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', {...currentProduct});\n  };\n  \n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n            disabled={!cart.find(p => p._id === currentProduct._id)}\n            onClick={removeFromCart}\n            >Remove from Cart</button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}