{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rmurp\\\\Desktop\\\\projects\\\\shop-shop\\\\client\\\\src\\\\components\\\\Cart\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css'; // import { useStoreContext } from '../../utils/GlobalState';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const cartOpen = useSelector(state => state.cartOpen);\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    ;\n\n    if (!cart.length) {\n      getCart();\n    }\n  }, [cart.length, dispatch]);\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, [data]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  }\n\n  if (!cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Shopping Cart\"), cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 27\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/rmurp/Desktop/projects/shop-shop/client/src/components/Cart/index.js"],"names":["React","useEffect","CartItem","Auth","useDispatch","useSelector","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","stripePromise","Cart","dispatch","cart","state","cartOpen","getCheckout","data","getCart","type","products","length","then","res","redirectToCheckout","sessionId","checkout","session","toggleCart","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","i","push","_id","variables","map","loggedIn"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\n// import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\n    // const [state, dispatch] = useStoreContext();\n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart);\n    const cartOpen = useSelector(state => state.cartOpen);\n\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n        };\n\n        if (!cart.length) {\n            getCart();\n        }\n    }, [cart.length, dispatch]);\n    \n    useEffect(() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session});\n            });\n        }\n    }, [data]);\n    \n    function toggleCart() {\n    dispatch({ type: TOGGLE_CART});\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n    function submitCheckout() {\n        const productIds = [];\n\n        cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        });\n\n        getCheckout({\n            variables: { products: productIds }\n        });\n    }\n\n    if(!cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n                <span\n                role=\"img\"\n                aria-label=\"trash\">\n                🛒\n                </span>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"cart\">\n            <div className=\"close\" onClick={toggleCart}>[close]</div>\n            <h2>Shopping Cart</h2>\n            {cart.length ? (\n                <div>\n                    {cart.map(item => (\n                    <CartItem key={item._id} item={item} />\n            ))}\n                <div className=\"flex-row space-between\">\n                    <strong>Total: ${calculateTotal()}</strong>\n                        {\n                        Auth.loggedIn() ?\n                            <button onClick={submitCheckout}>\n                                Checkout\n                            </button>\n                        : <span>(log in to check out)</span>\n                        }\n                </div>\n        </div>\n        ) : (\n        <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n                😱\n            </span>\n                You haven't added anything to your cart yet!\n        </h3>\n        )}\n        </div>\n    );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}